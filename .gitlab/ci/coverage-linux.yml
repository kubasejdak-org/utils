.Linux_Coverage:
  stage: coverage
  only:
    - master
  image: ${DOCKER_IMAGE_GCC}
  tags:
    - cet_build
  needs: []
  artifacts:
    name: "${CI_JOB_NAME}_${CI_JOB_ID}"
    expire_in: 2 weeks
    paths:
      - ${CI_JOB_NAME}/coverage
  script:
    - mkdir ${CI_JOB_NAME}
    - cd ${CI_JOB_NAME}

    # Build application.
    - cmake .. -DCOVERAGE=ON
    - make
    - bin/utils-tests [unit]${Tags}
    - make coverage
    - sed -i "s|SF:${CI_PROJECT_DIR}/|SF:|g" coverage/coverage.info

Bits_Coverage:
  extends: .Linux_Coverage
  variables:
    Tags: "[bits]"

EventStats_Coverage:
  extends: .Linux_Coverage
  variables:
    Tags: "[EventStats]"

ExecAround_Coverage:
  extends: .Linux_Coverage
  variables:
    Tags: "[ExecAround]"

GlobalRegistry_Coverage:
  extends: .Linux_Coverage
  variables:
    Tags: "[GlobalRegistry]"

Logger_Coverage:
  extends: .Linux_Coverage
  variables:
    Tags: "[Logger]"

Property_Coverage:
  extends: .Linux_Coverage
  variables:
    Tags: "[property]"

Result_Coverage:
  extends: .Linux_Coverage
  variables:
    Tags: "[Result]"

ScopedExit_Coverage:
  extends: .Linux_Coverage
  variables:
    Tags: "[ScopedExit]"

StateMachine_Coverage:
  extends: .Linux_Coverage
  variables:
    Tags: "[StateMachine]"

TcpConnection_Coverage:
  extends: .Linux_Coverage
  variables:
    Tags: "[TcpClient],[TcpServer],[TcpConnection]"

Watchdog_Coverage:
  extends: .Linux_Coverage
  variables:
    Tags: "[Watchdog]"
