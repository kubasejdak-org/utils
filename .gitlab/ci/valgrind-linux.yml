.Run_Valgrind_Linux:
  stage: valgrind
  image: kubasejdak/gcc:latest
  tags:
    - linux
  needs:
    - Linux_GCC_Debug_Build
  variables:
    GIT_STRATEGY: none
    AppArtifact: "Linux_GCC_Debug_Build"
  script:
    - cd ${AppArtifact}/bin
    - valgrind --leak-check=full --show-leak-kinds=all --error-exitcode=123 ./utils-tests ${TestTags} || if [ $? -eq 123 ]; then exit 1; fi

Bits_Linux_Valgrind:
  extends: .Run_Valgrind_Linux
  variables:
    TestTags: "[bits]"

GlobalRegistry_Linux_Valgrind:
  extends: .Run_Valgrind_Linux
  variables:
    TestTags: "[GlobalRegistry]"

Logger_Linux_Valgrind:
  extends: .Run_Valgrind_Linux
  variables:
    TestTags: "[Logger]"

Property_Linux_Valgrind:
  extends: .Run_Valgrind_Linux
  variables:
    TestTags: "[Property]"

ScopedExit_Linux_Valgrind:
  extends: .Run_Valgrind_Linux
  variables:
    TestTags: "[ScopedExit]"

StateMachine_Linux_Valgrind:
  extends: .Run_Valgrind_Linux
  variables:
    TestTags: "[StateMachine]"

TcpConnection_Linux_Valgrind:
  extends: .Run_Valgrind_Linux
  variables:
    TestTags: "[TcpConnection]"

TcpServer_Linux_Valgrind:
  extends: .Run_Valgrind_Linux
  variables:
    TestTags: "[TcpServer]"

Watchdog_Linux_Valgrind:
  extends: .Run_Valgrind_Linux
  variables:
    TestTags: "[Watchdog]"
