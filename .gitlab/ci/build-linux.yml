.Build_Test_Linux:
  tags:
    - cet_build
  needs: []
  artifacts:
    name: "${CI_JOB_NAME}_${CI_JOB_ID}"
    expire_in: 2 weeks
    paths:
      - ${CI_JOB_NAME}/bin
  script:
    - mkdir ${CI_JOB_NAME}
    - cd ${CI_JOB_NAME}

    # Build application.
    - cmake .. --preset ${Preset}
    - make

.Build_Test_Linux_ARM_Clang:
  extends: .Build_Test_Linux
  stage: build-Clang
  image: ${DOCKER_IMAGE_ARM_LINUX_CLANG}

.Build_Test_Linux_ARM_GCC:
  extends: .Build_Test_Linux
  stage: build-GCC
  image: ${DOCKER_IMAGE_ARM_LINUX_GCC}

.Build_Test_Linux_Clang:
  extends: .Build_Test_Linux
  stage: build-Clang
  image: ${DOCKER_IMAGE_CLANG}

.Build_Test_Linux_GCC:
  extends: .Build_Test_Linux
  stage: build-GCC
  image: ${DOCKER_IMAGE_GCC}

Linux_ARM_Clang_Debug_Build:
  extends: .Build_Test_Linux_ARM_Clang
  variables:
    Preset: "linux-arm-clang-debug"

Linux_ARM_Clang_Release_Build:
  extends: .Build_Test_Linux_ARM_Clang
  only:
    - master
  variables:
    Preset: "linux-arm-clang-release"

Linux_ARM_GCC_Debug_Build:
  extends: .Build_Test_Linux_ARM_GCC
  variables:
    Preset: "linux-arm-gcc-debug"

Linux_ARM_GCC_Release_Build:
  extends: .Build_Test_Linux_ARM_GCC
  only:
    - master
  variables:
    Preset: "linux-arm-gcc-release"

Linux_Clang_Debug_Build:
  extends: .Build_Test_Linux_Clang
  variables:
    Preset: "linux-clang-debug"

Linux_Clang_Release_Build:
  extends: .Build_Test_Linux_Clang
  only:
    - master
  variables:
    Preset: "linux-clang-release"

Linux_GCC_Debug_Build:
  extends: .Build_Test_Linux_GCC
  variables:
    Preset: "linux-gcc-debug"

Linux_GCC_Release_Build:
  extends: .Build_Test_Linux_GCC
  only:
    - master
  variables:
    Preset: "linux-gcc-release"
