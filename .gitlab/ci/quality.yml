Clang_Format:
  stage: quality
  image: ${DOCKER_IMAGE_CLANG}
  tags:
    - cet_build
  needs: []
  script:
    - tools/check-clang-format.sh lib test
    - git diff --color > clang-format.patch
    - |
      if [[ `wc -l < clang-format.patch` != "0" ]]; then
        cat clang-format.patch
        git checkout -- .
        exit 1
      fi

.Clang_Tidy:
  stage: quality
  tags:
    - cet_build
  needs: []
  artifacts:
    name: "${CI_JOB_NAME}_${CI_JOB_ID}"
    expire_in: 2 weeks
    when: always
    paths:
      - ${CI_JOB_NAME}/errors.yml
      - ${CI_JOB_NAME}/compile_commands.json
  script:
    - mkdir ${CI_JOB_NAME}
    - cd ${CI_JOB_NAME}

    # Check build.
    - cmake .. -DTOOLCHAIN=${Toolchain}
    - ../tools/check-clang-tidy.sh

Clang_Tidy_Linux:
  extends: .Clang_Tidy
  image: ${DOCKER_IMAGE_CLANG}
  variables:
    Toolchain: "clang"

Clang_Tidy_Linux_ARM:
  extends: .Clang_Tidy
  image: ${DOCKER_IMAGE_ARM_LINUX_CLANG}
  variables:
    Toolchain: "arm-linux-gnueabihf-clang"

Coverage_Total:
  stage: quality
  only:
    - master
  image: ${DOCKER_IMAGE_GCC}
  tags:
    - cet_build
  needs:
    - Bits_Coverage
    - ExecAround_Coverage
    - GlobalRegistry_Coverage
    - Logger_Coverage
    - Property_Coverage
    - ScopedExit_Coverage
    - StateMachine_Coverage
    - TcpConnection_Coverage
    - Watchdog_Coverage
  artifacts:
    name: "${CI_JOB_NAME}_${CI_JOB_ID}"
    expire_in: 2 weeks
    paths:
      - ${CI_JOB_NAME}
  script:
    - mkdir ${CI_JOB_NAME}
    - cd ${CI_JOB_NAME}

    - |
      lcov -a ../Bits_Coverage/coverage/coverage.info \
           -a ../ExecAround_Coverage/coverage/coverage.info \
           -a ../GlobalRegistry_Coverage/coverage/coverage.info \
           -a ../Logger_Coverage/coverage/coverage.info \
           -a ../Property_Coverage/coverage/coverage.info \
           -a ../ScopedExit_Coverage/coverage/coverage.info \
           -a ../StateMachine_Coverage/coverage/coverage.info \
           -a ../TcpConnection_Coverage/coverage/coverage.info \
           -a ../Watchdog_Coverage/coverage/coverage.info \
           -o coverage.info
    - sed -i "s|SF:|SF:${CI_PROJECT_DIR}/|g" coverage.info
    - genhtml coverage.info -o html
    - echo Coverage - `lcov --summary coverage.info | grep lines | cut -d ' ' -f 4`
